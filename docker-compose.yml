version: '3.9'

services:
  db-primary:
    container_name: db-primary
    image: postgres:15.6
    restart: on-failure
    environment:
      - POSTGRES_HOST=${POSTGRES_SERVER_URL}
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - blogs-network

  cache:
    container_name: cache
    image: redis:7.2.4
    restart: on-failure
    ports:
      - 6379:6379
    command: --requirepass ${REDIS_PASSWORD}
    networks:
      - blogs-network

  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: apps/backend/Dockerfile
    restart: on-failure
    ports:
      - 3000:3000
    networks:
      - blogs-network
    depends_on:
      - cache
      - db-primary

  blogs:
    container_name: blogs
    build:
      context: ./
      dockerfile: apps/blogs/Dockerfile
    restart: on-failure
    ports:
      - 4200:80
    networks:
      - blogs-network
    depends_on:
      - backend

networks:
  blogs-network:
    name: blogs-network
    driver: bridge