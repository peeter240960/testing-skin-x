generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/client-primary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id       String @id @default(uuid()) @db.Uuid
  username String @unique
  password String

  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
  createdBy   String
  updatedBy   String?
  AccountPost AccountPost[]

  @@map("account")
}

model Post {
  id       String   @id @default(uuid()) @db.Uuid
  title    String
  content  String
  postedAt String
  postedBy String
  tags     String[]

  updatedAt   DateTime?     @updatedAt
  updatedBy   String?
  PostTag     PostTag[]
  AccountPost AccountPost[]

  @@map("post")
}

model AccountPost {
  id        String @id @default(uuid()) @db.Uuid
  postId    String @unique @db.Uuid
  accountId String @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  createdBy String
  updatedBy String?
  Account   Account   @relation(fields: [accountId], references: [id])
  Post      Post      @relation(fields: [postId], references: [id])

  @@map("account_post")
}

model PostTag {
  id     String @id @default(uuid()) @db.Uuid
  postId String @db.Uuid
  tagId  String @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  createdBy String
  updatedBy String?
  Tag       Tag       @relation(fields: [tagId], references: [id])
  Post      Post      @relation(fields: [postId], references: [id])

  @@map("post_tag")
}

model Tag {
  id    String @id @default(uuid()) @db.Uuid
  title String @unique @db.Uuid

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  createdBy String
  updatedBy String?
  PostTag   PostTag[]

  @@map("tag")
}
